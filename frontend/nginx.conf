# frontend/docker/nginx.conf

server {
    # Écoute sur le port 80 (standard HTTP)
    listen 80;

    # Nom du serveur (peut être adapté pour des noms de domaine spécifiques en production)
    server_name _;

    # Répertoire racine où Nginx cherchera les fichiers à servir
    root /usr/share/nginx/html;

    # Fichier par défaut à servir si une requête est pour un répertoire
    index index.html;

    # --- Headers de sécurité recommandés ---
    # Empêche le clickjacking (intégration de la page dans des iframes malveillantes)
    add_header X-Frame-Options "SAMEORIGIN";
    # Active la protection contre les attaques XSS (Cross-Site Scripting)
    add_header X-XSS-Protection "1; mode=block";
    # Empêche les navigateurs de "sniffer" le Content-Type réel d'un fichier (sécurité type MIME)
    add_header X-Content-Type-Options "nosniff";

    # --- Compression Gzip pour réduire la taille des transferts ---
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # --- Routing pour les Single Page Applications (SPA) comme Vite/React/Vue ---
    # Tente de servir le fichier demandé. Si non trouvé, essaie le répertoire.
    # Si toujours non trouvé, renvoie index.html (pour la gestion du routing côté client).
    location / {
        try_files $uri $uri/ /index.html;
        # Les SPAs gèrent leur propre cache. Nginx ne devrait pas les mettre en cache trop longtemps.
        expires -1; # Indique au client de ne pas mettre en cache le HTML
    }

    # --- Cache agressif pour les assets avec fingerprinting (nom de fichier change avec le contenu) ---
    # Par exemple, les assets générés par Vite dans le dossier 'assets' (ex: main-xxxxxxxx.js)
    location /assets {
        expires 1y; # Mise en cache très longue (1 an) côté client
        add_header Cache-Control "public, no-transform"; # Permet aux proxys de cacher
    }
}